// ========================================================================================
// THIS FILE HAS BEEN AUTOGENERATED - Do not edit directly
// ----------------------------------------------------------------------------------------
// Edit the template at 'priv/rust_generator/templates/array_binary_operations.rs' instead
// ========================================================================================

use crate::datatypes::*;

<%= for n_dim <- 1..6 do %>
// -----------------------------------------
// <%= n_dim %>D arrays
// -----------------------------------------
<%= for {op_name, op_symbol} <- @operations do %>
// <%= String.upcase(to_string(op_name)) %> for <%= n_dim %>D arrays and scalars
#[rustler::nif]
pub fn float<%= @nr_of_bits %>_<%= op_name %>_array<%= n_dim %>_array<%= n_dim %>(a: ExFloat<%= @nr_of_bits %>Array<%= n_dim %>, b: ExFloat<%= @nr_of_bits %>Array<%= n_dim %>) -> ExFloat<%= @nr_of_bits %>Array<%= n_dim %> {
  ExFloat<%= @nr_of_bits %>Array<%= n_dim %>::new(&a.resource.0 <%= op_symbol %> &b.resource.0)
}

#[rustler::nif]
pub fn float<%= @nr_of_bits %>_<%= op_name %>_array<%= n_dim %>_scalar(a: ExFloat<%= @nr_of_bits %>Array<%= n_dim %>, b: f<%= @nr_of_bits %>) -> ExFloat<%= @nr_of_bits %>Array<%= n_dim %> {
  ExFloat<%= @nr_of_bits %>Array<%= n_dim %>::new(&a.resource.0 <%= op_symbol %> b)
}

#[rustler::nif]
pub fn float<%= @nr_of_bits %>_<%= op_name %>_scalar_array<%= n_dim %>(a: f<%= @nr_of_bits %>, b: ExFloat<%= @nr_of_bits %>Array<%= n_dim %>) -> ExFloat<%= @nr_of_bits %>Array<%= n_dim %> {
  ExFloat<%= @nr_of_bits %>Array<%= n_dim %>::new(a <%= op_symbol %> &b.resource.0)
}
<% end %>
<% end %>
